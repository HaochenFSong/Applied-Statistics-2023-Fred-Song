library("readxl")
library("readxl")
hurri <- read_xlsx('pnas.1402786111.sd01.xlsx')
View(hurri)
View(hurri)
View(hurri)
View(hurri)
View(hurri)
View(hurri)
library("readxl")
hurri <- read_xlsx('pnas.1402786111.sd01.xlsx') # notice that only the first 92 rows contain useful datas, the rest are summaries made by author
hurr <- hurri[1:92,]
library("readxl")
hurri <- read_xlsx('pnas.1402786111.sd01.xlsx') # notice that only the first 92 rows contain useful datas, the rest are summaries made by author
hurri <- hurri[1:92,]
View(hurri)
View(hurri)
View(hurri)
View(hurri)
library("readxl")
hurri <- read_xlsx('pnas.1402786111.sd01.xlsx') # notice that only the first 92 rows contain useful datas, the rest are summaries made by author
hurri <- hurri[1:92,]
head(hurri)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
library(tidyverse)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_line(color = 'firebrick4')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_points(color = 'firebrick4')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patters in Deaths by Damage',
x = 'Standardized Damage',
y = 'Mortality Rate')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patters in Deaths by Damage',
x = 'Standardized Damage',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by Damage',
x = 'Standardized Damage',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by Damage',
x = 'Standardized Damage',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by Damage',
x = 'Standardized Mass of Femininity',
y = 'Deaths Number')+
theme_bw(base_size = 14)
View(hurri)
p <-ggplot(data = hurri, aes(x = MasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by Damage',
x = 'Mass of Femininity',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by standardized mass of Femininity',
x = 'Standardized Mass of Femininity',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = MasFem, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by mass of Femininity',
x = 'Mass of Femininity',
y = 'Deaths Number')+
theme_bw(base_size = 14)
View(hurri)
p <-ggplot(data = hurri, aes(x = Z_MinPressure_A, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by standardized minimum of pressure',
x = 'Standardized minimum of pressure',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZMinPressure_A, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by standardized minimum of pressure',
x = 'Standardized minimum of pressure',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZNDAM, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by standardized damage dealt by hurricanes',
x = 'Standardized damage',
y = 'Deaths Number')+
theme_bw(base_size = 14)
p <-ggplot(data = hurri, aes(x = ZNDAM, y = alldeaths))
p+
geom_point(color = 'firebrick4')+
labs(title = 'Patterns in Deaths by standardized damage dealt by hurricanes',
x = 'Standardized damage',
y = 'Deaths Number')+
theme_bw(base_size = 14)
model_1 <- glm(alldeaths~ZMasFem, family=poisson,data=hurri)
summary(model_1)
exp(0.23840)
model_1 <- glm(alldeaths~ZMasFem, family=poisson(link = "log"),data=hurri)
summary(model_1)
stand_res <- rstandard(model1)
model1 <- glm(alldeaths~ZMasFem, family=poisson(link = "log"),data=hurri)
summary(model1)
stand_res <- rstandard(model1)
print(stand_res)
n <- 92
k <- 2
stand_res <- rstandard(model1)
disp <- 1/(n-k) * sum(stand_res^2)
n <- 92
k <- 2
stand_res <- rstandard(model1)
disp <- 1/(n-k) * sum(stand_res^2)
print(disp)
n <- 92
k <- 2
stand_res <- rstandard(model1)
disp <- 1/(n-k) * sum(stand_res^2)
print(disp)
1- pchisq(sum(stand_resË†2), n-k)
n <- 92
k <- 2
stand_res <- rstandard(model1)
disp <- 1/(n-k) * sum(stand_res^2)
print(disp)
1- pchisq(sum(stand_res^2), n-k)
n <- 92
k <- 2
stand_res <- rstandard(model1)
disp <- 1/(n-k) * sum(stand_res^2)
print(disp)
1- pchisq(sum(stand_res^2), n-k)
summary(model1)[["dispersion"]]
model2 <- glm(alldeaths~ZMasFem, family=quasipoisson,data=hurri)
summary(model2)
model2 <- glm(alldeaths~ZMasFem, family=quasipoisson,data=hurri)
summary(model2)[['dispersion']]
model2 <- glm(alldeaths~ZMasFem, family=quasipoisson,data=hurri)
summary(model2)
-1:15
stepplot <- function(x,y,s){
n <- length(x)
plot(x = NULL, y = NULL, xlim = range(-4:4), ylim = range(0:1),
xlab = 'z', ylab = 'prob',
main = paste('CLT: ppois vs pnorm for lambda = ', s))
for (j in 1:(n-1)){
lines(c(x[j], x[j+1]), c(y[j], y[j]))
if (j> 1) {points(x[j], y[j], pch = 16)}
if (j <n-1) {points(x[j+1], y[j], pch =1)}
}
}
n <- 5
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
rstepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
stepplot <- function(x,y,s){
n <- length(x)
plot(x = NULL, y = NULL, xlim = range(-4:4), ylim = range(0:1),
xlab = 'z', ylab = 'prob',
main = paste('CLT: ppois vs pnorm for lambda = ', s))
for (j in 1:(n-1)){
lines(c(x[j], x[j+1]), c(y[j], y[j]))
if (j> 1) {points(x[j], y[j], pch = 16)}
if (j <n-1) {points(x[j+1], y[j], pch =1)}
}
}
n <- 5
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
stepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
curve(pnorm(z), xname = 'z', from = -4, to = 4, col = 'red', lwd = 2, add = T)
n <- 5
mu_n <- n
sigma_n <- sqrt(n)
xleft <- floor(mu_n - 3*sigma_n)
xright <- floor(mu_n + 3*sigma_n) +1
x <- xleft:xright
ymax <- dnorm(mu_n, mean = mu_n, sd = sigma_n)
plot(NULL, NULL, xlim = c(xleft, xright), ylim = c(0, ymax),
xlab = 'x', ylab = 'prob mass/ unit density',
main = paste( 'dpois vs dnorm for lambda = ',n))
points(x, dpoint(x, lambda = n))
n <- 5
mu_n <- n
sigma_n <- sqrt(n)
xleft <- floor(mu_n - 3*sigma_n)
xright <- floor(mu_n + 3*sigma_n) +1
x <- xleft:xright
ymax <- dnorm(mu_n, mean = mu_n, sd = sigma_n)
plot(NULL, NULL, xlim = c(xleft, xright), ylim = c(0, ymax),
xlab = 'x', ylab = 'prob mass/ unit density',
main = paste( 'dpois vs dnorm for lambda = ',n))
points(x, dpois(x, lambda = n))
curve(dnorm(x, mean = mu_n, sd = sigma_n), xname = 'x',
from = xleft, to = xright, col = 'red', add = T)
stepplot <- function(x,y,s){
n <- length(x)
plot(x = NULL, y = NULL, xlim = range(-4:4), ylim = range(0:1),
xlab = 'z', ylab = 'prob',
main = paste('CLT: ppois vs pnorm for lambda = ', s))
for (j in 1:(n-1)){
lines(c(x[j], x[j+1]), c(y[j], y[j]))
if (j> 1) {points(x[j], y[j], pch = 16)}
if (j <n-1) {points(x[j+1], y[j], pch =1)}
}
}
n <- 5
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
stepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
curve(pnorm(z), xname = 'z', from = -4, to = 4, col = 'red', lwd = 2, add = T)
n <- 10
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
stepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
curve(pnorm(z), xname = 'z', from = -4, to = 4, col = 'red', lwd = 2, add = T)
n <- 20
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
stepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
curve(pnorm(z), xname = 'z', from = -4, to = 4, col = 'red', lwd = 2, add = T)
n <- 5
y <- -1: (3*n)
mu_n <- n
sigma_n <- sqrt(n)
stepplot((y-mu_n)/sigma_n, ppois(y, lambda = n), n)
curve(pnorm(z), xname = 'z', from = -4, to = 4, col = 'red', lwd = 2, add = T)
dp <- read_csv('/Users/haochensong/Desktop/IMI competition/UofT_nodes.csv')
head(dp)
dp <- read_csv('/Users/haochensong/Desktop/IMI competition/UofT_nodes.csv')
head(dp)
View(hurri)
dp <- read_csv('/Users/haochensong/Desktop/IMI competition/UofT_nodes.csv', show_col_types = FALSE)
head(dp)
occ_risk <- read_csv('/Users/haochensong/Desktop/IMI competition/UofT_occupation_risk.csv', show_col_types = FALSE)
head(occ_risk)
#| message: false
#install.packages("tidyverse")
library(tidyverse)
dp <- left_join(dp, occ_risk, by = c("OCPTN_NM" = "code"), na.rm = TRUE)
head(dp)
head(dp)
dp <- dp |>
mutate(RES_CNTRY_CA = as.factor(RES_CNTRY_CA))
head(dp)
dp <- dp |>
mutate(RES_CNTRY_CA = as.factor(RES_CNTRY_CA),
CNTRY_OF_INCOME_CA = as.factor(CNTRY_OF_INCOME_CA),
PEP_FL = as.factor(PEP_FL),
COUNTRY_RISK_INCOME = as.factor(COUNTRY_RISK_INCOME))
head(dp)
dp <- dp |>
mutate(RES_CNTRY_CA = as.factor(RES_CNTRY_CA),
CNTRY_OF_INCOME_CA = as.factor(CNTRY_OF_INCOME_CA),
PEP_FL = as.factor(PEP_FL),
COUNTRY_RISK_INCOME = as.factor(COUNTRY_RISK_INCOME),
COUNTRY_RISK_RESIDENCY = as.facto(COUNTRY_RISK_RESIDENCY),
RISK = as.factor(RISK),
GENDER = as.factor(GENDER),
occupation_risk = as.factor(occupation_risk))
dp <- dp |>
mutate(RES_CNTRY_CA = as.factor(RES_CNTRY_CA),
CNTRY_OF_INCOME_CA = as.factor(CNTRY_OF_INCOME_CA),
PEP_FL = as.factor(PEP_FL),
COUNTRY_RISK_INCOME = as.factor(COUNTRY_RISK_INCOME),
COUNTRY_RISK_RESIDENCY = as.factor(COUNTRY_RISK_RESIDENCY),
RISK = as.factor(RISK),
GENDER = as.factor(GENDER),
occupation_risk = as.factor(occupation_risk))
head(dp)
install.packages("eeptools")
Sys.Date()
#install.packages("eeptools")
library("eeptools")
dp <- dp |>
mutate(age = age_calc(BIRTH_DT,Sys.Date(), units = "years"))
dp[1:10]
#install.packages("eeptools")
library("eeptools")
da <- dp[1:10] |>
mutate(age = age_calc(BIRTH_DT,Sys.Date(), units = "years"))
dp['BIRTH_DT']
dp['BIRTH_DT'][1]
dp['BIRTH_DT'][1:10]
dp['BIRTH_DT'][1,]
age_calc(dp['BIRTH_DT'][1,],today, units = "years")
today <- sys.Date()
#install.packages("eeptools")
library("eeptools")
today <- sys.Date()
today <- Sys.Date()
age_calc(dp['BIRTH_DT'][1,],today, units = "years")
dp <- dp |>
mutate(RES_CNTRY_CA = as.factor(RES_CNTRY_CA),
CNTRY_OF_INCOME_CA = as.factor(CNTRY_OF_INCOME_CA),
PEP_FL = as.factor(PEP_FL),
COUNTRY_RISK_INCOME = as.factor(COUNTRY_RISK_INCOME),
COUNTRY_RISK_RESIDENCY = as.factor(COUNTRY_RISK_RESIDENCY),
RISK = as.factor(RISK),
GENDER = as.factor(GENDER),
occupation_risk = as.factor(occupation_risk),
)
head(dp)
model1 <-glm(RISK~OCPTN_NM+RES_CNTRY_CA+CNTRY_OF_INCOME_CA+PEP_FL+CASH_SUM_IN+CASH_SUM_OUT+CASH_CNT_OUT+WIRES_SUM_IN+WIRES_CNT_IN+WIRES_SUM_OUT+COUNTRY_RISK_INCOME+COUNTRY_RISK_RESIDENCY, familiy = binomial, data = dp)
model1 <-glm(RISK~OCPTN_NM +
RES_CNTRY_CA +
CNTRY_OF_INCOME_CA +
PEP_FL+CASH_SUM_IN +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN +
WIRES_SUM_OUT +
COUNTRY_RISK_INCOME +
COUNTRY_RISK_RESIDENCY, familiy = binomial(link='logit'), data = dp)
model1 <-glm(RISK~OCPTN_NM +
RES_CNTRY_CA +
CNTRY_OF_INCOME_CA +
PEP_FL+CASH_SUM_IN +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN, familiy = binomial(link='logit'), data = dp)
model1 <-glm(RISK~OCPTN_NM +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN, familiy = binomial(link='logit'), data = dp)
model1 <-multinom(RISK~OCPTN_NM +
RES_CNTRY_CA +
CNTRY_OF_INCOME_CA +
PEP_FL+CASH_SUM_IN +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN +
WIRES_SUM_OUT +
COUNTRY_RISK_INCOME+
COUNTRY_RISK_RESIDENCY, data = dp)
library("nnet")
library("nnet")
model1 <-multinom(RISK~OCPTN_NM +
RES_CNTRY_CA +
CNTRY_OF_INCOME_CA +
PEP_FL+CASH_SUM_IN +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN +
WIRES_SUM_OUT +
COUNTRY_RISK_INCOME+
COUNTRY_RISK_RESIDENCY, data = dp)
summary(model1)
test_n <- sample (1000, 1, 1000000)
test_n
test_n <- sample (1;1000000, 10000, replace = F)
test_n <- sample (1:1000000, 10000, replace = F)
test_n
test_n <- sample (1:1000000, 10000, replace = F)
test <- dp[test_n]
test_n <- sample (1:1000000, 1000, replace = F)
test <- dp[test_n]
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test]
test
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
predicted.classes <- model1 |> predict(test)
predicted.classes
mean(predicted.classes == test$RISK)
predicted.classes == test$RISK
mean(predicted.classes == test$RISK, na.rm = T)
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
train <-dp[!test,]
train <- ! test
train <- !test
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
train <-dp[(!test),]
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
train <- (!test)
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
test <- dp[test,]
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
train <- (!test)
train <-dp[train,]
test <- dp[test,]
predicted.classes <- model1 |> predict(test)
test <- sample(c(TRUE,FALSE), nrow(dp),rep=TRUE)
train <- (!test)
train <-dp[train,]
test <- dp[test,]
library("nnet")
model1 <-multinom(RISK~OCPTN_NM +
RES_CNTRY_CA +
CNTRY_OF_INCOME_CA +
PEP_FL+CASH_SUM_IN +
CASH_SUM_OUT +
CASH_CNT_OUT +
WIRES_SUM_IN +
WIRES_CNT_IN +
WIRES_SUM_OUT +
COUNTRY_RISK_INCOME+
COUNTRY_RISK_RESIDENCY, data = train)
summary(model1)
predicted.classes <- model1 |> predict(test)
mean(predicted.classes == test$RISK, na.rm = T)
#| message: false
library(tidyverse)
model3 <- glm.nb (alldeaths ~ ZMinPressure_A + ZMasFem + ZNDAM + ZMasFem*ZMinPressure_A + ZMasFem*ZNDAM , data = hurri)
library(MASS)
library(MASS)
model3 <- glm.nb (alldeaths ~ ZMinPressure_A + ZMasFem + ZNDAM + ZMasFem*ZMinPressure_A + ZMasFem*ZNDAM , data = hurri)
summary(model3)
0.1723+0.3948+0.7051
exp(1.2722)
hurri['Name']
hurri |>
select(Name == 'Sandy')
hurri |>
select(Name = 'Sandy')
hurri |>
filter(Name == 'Sandy')
hurri |>
filter(Name == 'Sandy') |>
predict(model3)
model3 |> predict(hurri |>
filter(Name == 'Sandy'))
library(MASS)
model4 <- glm.nb (alldeaths ~ ZMinPressure_A + ZMasFem + ZNDAM + ZMasFem*ZMinPressure_A + ZMasFem*ZNDAM , data = hurri)
summary(model3)
model4 |> predict(hurri |>
filter(Name == 'Sandy'))
hurri |>
filter(Name =='Sandy') |>
select(alldeaths)
hurri |>
filter(Name =='Sandy') |>
hurri |>
filter(Name =='Sandy')
hurri |>
filter(Name =='Sandy') |>
select(alldeaths)
hurri |>
filter(Name =='Sandy')
model4 |> predict(hurri |> filter(Name == 'Sandy')) |> exp()
covid <- read_csv(COVID.csv)
covid <- read_csv('COVID.csv')
head(covid)
acs <- read_csv('acs.csv')
head(acs)
acs <- read_csv('acs.csv', show_col_types = FALSE)
head(acs)
View(acs)
View(acs)
acs|>
group_by(fips)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
#install.packages("ggpubr")
library(ggpubr)
#install.packages("ggpubr")
library(ggplot2)
#install.packages("ggpubr")
#| message: false
library(tidyverse)
#| message: false
library(tidyverse)
#| message: false
library(tidyverse)
